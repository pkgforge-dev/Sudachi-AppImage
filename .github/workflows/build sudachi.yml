name: Build Sudachi
concurrency:
  group: build-sudachi-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: {}

jobs:
  appimage: 
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        include:
          - target: steamdeck
            runs-on: ubuntu-latest
          - target: modern
            runs-on: ubuntu-latest
          - target: legacy
            runs-on: ubuntu-latest            
          - target: aarch64
            runs-on: ubuntu-24.04-arm
    continue-on-error: true
    container: ghcr.io/pkgforge-dev/archlinux:latest
    name: "Appimage (${{ matrix.target }})"
    env:
      CCACHE_DIR: ${{ github.workspace }}/.ccache
      CCACHE_COMPILERCHECK: content
      CCACHE_SLOPPINESS: time_macros
      SCCACHE_GHA_ENABLED: "true"
    steps:
      - uses: actions/checkout@v4.2.2
        with:
          persist-credentials: false

      - name: Set up cache for vcpkg
        uses: actions/cache@v4.2.4
        with:
          path: /github/home/.cache/vcpkg/archives
          key: ${{ runner.os }}-${{ matrix.target }}-vcpkg-${{ hashFiles('dependencies.sh') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.target }}-vcpkg-

      - name: Set up ccache for ${{ matrix.target }}
        if: ${{ matrix.target != 'aarch64' }}      
        uses: actions/cache@v4.2.4
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ${{ runner.os }}-ccache-${{ matrix.target }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-ccache-${{ matrix.target }}-
            
      - name: set up sccache-cache
        if: ${{ matrix.target == 'aarch64' }}  
        uses: mozilla-actions/sccache-action@v0.0.9            
            
      - name: Install dependencies
        run: |
          chmod +x ./dependencies.sh
          ./dependencies.sh
          
      - name: Compile Sudachi ${{ matrix.target }}
        run: |
          chmod +x ./sudachi-appimage.sh
          ./sudachi-appimage.sh ${{ matrix.target }}

      - name: Upload ${{ matrix.target}} appimage
        uses: actions/upload-artifact@v4.6.2
        with:
          name: sudachi-${{ matrix.target}}-appimage
          path: ./sudachi/build/artifacts

      - name: Upload version file
        uses: actions/upload-artifact@v4.6.2
        with:
          name: version
          path: ~/version
          overwrite: true
                    
  release:
    name: "release"
    if: ${{ github.ref_name == 'main' }}
    needs: [appimage]
    permissions:
      actions: read
      security-events: write
      contents: write
    runs-on: ubuntu-latest
    steps:    
      - uses: actions/download-artifact@v4.3.0
        with:
           name: sudachi-steamdeck-appimage
           
      - uses: actions/download-artifact@v4.3.0
        with:
           name: sudachi-modern-appimage
           
      - uses: actions/download-artifact@v4.3.0
        with:
           name: sudachi-legacy-appimage
        continue-on-error: true
           
      - uses: actions/download-artifact@v4.3.0
        with:
           name: sudachi-aarch64-appimage
        
      - uses: actions/download-artifact@v4.3.0
        with:
           name: version
           
      - name: Read version and Get date
        run: |
          echo "VERSION=$(cat version)" >> "${GITHUB_ENV}"
          echo "DATE=$(date +'%Y-%m-%d')" >> "$GITHUB_ENV"

      - name: Release Sudachi
        uses: softprops/action-gh-release@v2.3.2
        with:
          name: "Sudachi Unofficial Appimage: ${{ env.VERSION }}"
          tag_name: "${{ env.DATE }}-${{ env.VERSION }}"
          prerelease: false
          draft: false
          generate_release_notes: false
          fail_on_unmatched_files: false
          make_latest: true
          files: |
            *.AppImage*
